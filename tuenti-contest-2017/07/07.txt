# Word Soup Challenge

Se analiza el cÃ³digo que se carga.
Se comprueba que se llama a la funcion w.send con los nodos inicio y fin.
Se extrae las funciones encargadas de crear los mensajes.
Se invoca a la funcion gogo que obtiene las palabras, el tablero, se soliuciona y se manda el mensaje websocket.


Level 1:
f4a49a6df8494390e15de3c73e8d7827

Level 2:
0e64647b2ee5578a8d3be64110c82a3f


---------------------------------

(function(e,s){e.src=s;e.onload=function(){jQuery.noConflict();console.log('jQuery injected')};document.head.appendChild(e);})(document.createElement('script'),'//code.jquery.com/jquery-latest.min.js')


var words = jQuery("div[id^=word-]").toArray().map(function(e){ return e.innerText})



m = t => {
    let n, e, o, s = 0;
    const c = t + "-saltbae";
    if (!c.length) return s;
    for (n = 0, o = c.length; n < o; n++) e = c.charCodeAt(n), s = (s << 5) - s + e, s |= 0;
    return Math.abs(s)
}


kk = (f, t) =>  {
    e = `${f}-${t}`;
    w.send(btoa(`${e}-${m(e)}`))
}

(function(e,s){e.src=s;e.onload=function(){jQuery.noConflict();console.log('jQuery injected')};document.head.appendChild(e);})(document.createElement('script'),'//code.jquery.com/jquery-latest.min.js')

var orientations = {
      horizontal:     function(x,y,i) { return {x: x+i, y: y  }; },
      horizontalBack: function(x,y,i) { return {x: x-i, y: y  }; },
      vertical:       function(x,y,i) { return {x: x,   y: y+i}; },
      verticalUp:     function(x,y,i) { return {x: x,   y: y-i}; },
      diagonal:       function(x,y,i) { return {x: x+i, y: y+i}; },
      diagonalBack:   function(x,y,i) { return {x: x-i, y: y+i}; },
      diagonalUp:     function(x,y,i) { return {x: x+i, y: y-i}; },
      diagonalUpBack: function(x,y,i) { return {x: x-i, y: y-i}; }
    };

var mark = function (r) { 
    var orig = {x: r.x, y: r.y}
    var final = orientations[r.orientation](r.x, r.y, r.overlap - 1)

    kk(orig.x + "-" + orig.y, final.x + "-" + final.y)
}

// Se carga el solucionador de sopas de leras
// https://raw.githubusercontent.com/bunkat/wordfind/master/src/wordfind.js

gogo = function () {
    var words = jQuery("div[id^=word-]").toArray().map(function(e){ return e.innerText})

    var board = jQuery("tr").toArray().map(e => jQuery("td", e).toArray().map(e => e.innerText))

    wordfind.solve(board, words).found.forEach(mark)
}

---------------------------------